name: CI (Linux/Ubuntu)

on:
  push:
    branches:
    - master
  pull_request:
    types:
    - opened
    - synchronize

jobs:
  build-test-ubuntu-stack:
    # ubuntu-20.04 required for a recent version of z3 (probably need >4.5)
    runs-on: ubuntu-20.04
    name: Ubuntu 20.04 / Stack
    steps:
    - uses: actions/checkout@v2

    # note that we require static libs (in Ubuntu, *-dev)
    - name: Install required libraries
      run: sudo apt install libflint-dev liblapack-dev z3

    # relative paths are relative to the project directory
    - name: Cache Stack build artifacts (user + project)
      uses: actions/cache@v2
      with:
        path: |
          ~/.stack
          .stack-work
        # best effort for cache: tie it to Stack resolver and package config
        key: ${{ runner.os }}-stack-${{ hashFiles('stack.yaml.lock', 'package.yaml') }}
        restore-keys:
          ${{ runner.os }}-stack

    - name: Install project dependencies
      run: stack --no-terminal test --only-dependencies

    - name: Build and run tests
      run: stack --no-terminal haddock --test --no-haddock-deps

  build-test-ubuntu-cabal:
    runs-on: ubuntu-20.04
    name: Ubuntu / GHC ${{ matrix.ghc }}, Cabal ${{ matrix.cabal }}
    strategy:
      matrix:
        cabal: ["3.2"] # latest as of 2021-02-23
        ghc:
        - "8.6"
        - "8.8"
        - "8.10"
    env:
      # note that all flags must be passed to every command even when
      # irrelevant, else Cabal will trigger arbitrary rebuilds
      CABAL_FLAGS: --enable-tests --enable-benchmarks --test-show-details=streaming
    steps:
    - uses: actions/checkout@v2

    # note that we require static libs (in Ubuntu, *-dev)
    - name: Install required libraries
      run: sudo apt install libflint-dev liblapack-dev z3

    - name: Setup Haskell build environment
      id: setup-haskell-build-env
      uses: haskell/actions/setup@v1
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Freeze Cabal plan
      run: cabal freeze $CABAL_FLAGS

    - name: Cache Cabal build artifacts
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.setup-haskell-build-env.outputs.cabal-store }}
          dist-newstyle
        key: ${{ runner.os }}-cabal-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
        restore-keys: |
          ${{ runner.os }}-cabal-${{ matrix.ghc }}

    - name: Build
      run: cabal build $CABAL_FLAGS

    - name: Test
      run: cabal test $CABAL_FLAGS
      env:
        HSPEC_OPTIONS: --color
