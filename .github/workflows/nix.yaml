name: nix

on:
  # run on every push to every branch (visibility doesn't matter)
  push:
  # don't want pull_request config, since it would run twice

env:
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build:
    name: build, build .#image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v12
      with:
        name: camfort
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - run: nix build

    # image building below
    # this could happen in a separate workflow, but it depends on the above
    # command. we *could* schedule it after and get decent caching via Cachix...
    # but it feels silly, so let's just add it in after.

    # configure this output in flake.nix
    # make sure you know how it's tagged to then reference when pushing (don't
    # know a better method)
    - run: nix build .#image

    - run: ./result | podman load

    - uses: redhat-actions/podman-login@v1
      with:
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
        registry: ${{ env.IMAGE_REGISTRY }}

    # 2023-06-28: redhat-actions/push-to-registry doesn't let you qualify your
    # target image, so it's pretty much useless. lmao
    # https://github.com/redhat-actions/push-to-registry/issues/66

    # your repo needs write permission to push to the registry for this to work!
    # configured in Packages (tab at user/org level)
    - run: podman push localhost/camfort:${{ github.sha }} ${{ env.IMAGE_REGISTRY }}/camfort:${{ github.sha }}
